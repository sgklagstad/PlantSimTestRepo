InternalClassType: Dialog
ArgumentForApply: "APPLY"
Coordinate3D: [-14.05,11.25,0]
DialogX: -1
DialogY: -1
Label: "Experiments"
Name: Dialog
Origin: 89fd2c2d-821a-4bd2-a706-33f2edd437f9
UUID: 94304cdb-8308-4682-aa01-92786a171ed9
$SequenceNumber: 17
3D:
 Mirror: [false,false,false]
$CustomAttributes:
-
 Name: callback
 ID: 1
 DataType: method
 RandomSeed: 313
 Value: |+1
  param Arg:string
  
  var bb:boolean
  var i,j,n:integer
  var selectTab:list[string]
  var Indizes:list[integer]
  var str:string
  var obj:object
  var tab:table
  
  switch Arg
  case "Start_but"
  	if checkDuplicates = true
  		messageBox("Can't start experiment. Please make sure that experiments have unique names.")
  		return
  	end
  	switch ~.State
  	case "stopped", "ready"
  		~.Start
  	case "SimStopped"
  		EventController.start
  		~.State := "running"
  	end
  
  case "Stop_but"
  	if ~.usingRemote  -- It is impossible to stop a distributed simulation.
  		str := Rootfolder.Localization.getText(402)
  		print str -- You cannot interrupt a distributed simulation and continue it later on.
  		messageBox(str,1,4) -- info
  
  	else -- non-distributed simulation
  		switch ~.State
  		case "wait4stop"  -- do nothing, this_state is only possible if NOT UsingRemote
  			-- Please wait until the current experiment is finished.
  			messageBox(Rootfolder.Localization.getText(350),1,4) -- info
  		case "running"
  			if messageBox(rootFolder.localization.getText(403),48,2) = 16  -- Would you like to finish the current experiment?
  				~.State := "wait4stop"
  				~.Recording.append(to_str("The user stops the Experimentmanager at ",sysdate))
  			else
  				if EventController /= void
  					~.State := "SimStopped"
  
  					Dialog.setSensitive("Start_But",true)
  
  					EventController.stop
  				end
  			end
  		else
  		end
  	end
  
  case "Reset_but"
  	if ~.~.InternalClassType = "Folder"
  		messageBox(rootfolder.Localization.getText(225),1,4) -- info
  		return
  	end
  
  	if EventController=void  -- Please insert an eventcontroller.
  		messageBox(rootfolder.Localization.getText(101),1,4) -- info
  		return
  	end
  	~.resetWizard
  
  case "MenuMultiLevel"
  	if ~.&resetWizard.check_InputValues_OutputValues
  		~.GeneralDesign.openDesignTab
  	end
  case "RandomDesign_menu"
  	if ~.&resetWizard.check_InputValues_OutputValues
  		~.RandomDesign.openDesignTab
  	end
  case "Menu2level"
  	if ~.&resetWizard.check_InputValues_OutputValues
  		~.Design.openDesignTab(true)
  	end
  case "FactorAnal"
  	~.FactAnal
  case "AdvancedSettings_menu"
  	AdvancedSettings.open
  case "ANOVA_menu"
  	obj := ~.pValues
  	~.selectOutputValue
  	if strLen(obj.OutputValue) < 1 then return end
  	if ~.T_Test(obj)
  		obj.openDialog
  	else -- The analysis of variance is impossible.
  		-- At least two experiments with random output for 'outputValue' are needed.
  		messageBox(to_str(rootfolder.Localization.getText(58),strChr(10),
  			rootfolder.Localization.getMessage(57,obj.outputValue,"","")),1,4) -- info
  	end
  case "numObserv_menu"
  	~.NumObservChart.show
  
  case "Store_menu"
  	~.storeParam
  case "Restore_menu"
  	-- If you used the configuration method or rules,
  	-- you yourself are responsible for restoring the original modelling configuration.
  	if strLen(~.UserConfigMethod)>0 OR ~.UsingRules
  		messageBox(to_str(rootfolder.Localization.getText(48),strChr(10),rootfolder.Localization.getText(49)),1,4) -- info
  	end
  	~.restoreParam
  
  case "DefineInputVariables_but"
  	~.Input.inheritContents := false
  	~.Input.openDialogBox(true)
  
  case "DefineInputValues_but" -- open ExpTable
  	obj := ~.expTable
  
  	obj.RowIndex := true -- treatment of old Experimentmanagers
  	if obj[0,0].void
  		obj[0,0] := Rootfolder.Localization.getText(448) -- "Name"
  	end
  
  	obj.InheritContents := False
  	obj.setAlignmentColumn(1,"center")
  	for j := 2 to obj.xDim
  		obj.setAlignmentColumn(j,"right")
  	next
  
  	NumberRepresentation(obj)
  
  	if getAsyncKeyState(16) >= 0
  		obj.openDialogbox(true)  -- AutoSizeColumns = true
  	else -- Shift-key pressed: User-defined experiment names
  		obj.openDialog -- CallOpenControl = false (no open control of ExpTable)
  	end
  
  case "OutputValues_but"
  	~.Output.inheritContents := false
  	~.Output.openDialogBox(true)
  case "Results_but"
  	bb := false
  	obj := ~.Results
  	for j := 0 to obj.XdimIndex
  		if obj.getDataType(j) ="table"
  			bb := true
  		end
  	next
  	n := ~.Input.ydim
  	for j := 1 to n
  		obj.setEditorRightsColumn(j,true)
  	next
  	n := ~.Input.ydim + ~.Output.ydim
  	for j := ~.Input.ydim + 1 to n
  		obj.setEditorRightsColumn(j,false)
  	next
  	obj.comment := rootfolder.Localization.getText(399) -- To open a subtable, select the cell and press F2.
  	obj.showComment := bb -- there is a column of type 'table'
  	NumberRepresentation(obj)
  	~.setNumberformat(obj)
  	obj.EditorReadOnly := true
  
  	if obj.xDim * obj.yDim > 100000 OR getAsyncKeyState(16) < 0   -- obj = ~.Results, Shift-key pressed
  		obj.openDialog -- CallOpenControl = false (no open control of  Results)
  	else
  		obj.openDialogbox(true) -- AutoSizeColumns = true
  	end
  
  case "DetailedResults_but"
  	obj := ~.detailedResults
  	obj.translate
  	obj.comment := rootfolder.Localization.getText(399) -- To open a subtable, select the cell and press F2.
  	obj.showComment := true
  	NumberRepresentation(obj)
  	obj.EditorReadOnly := true
  
  	if getAsyncKeyState(16) >= 0  -- open DataTable DetailedResults
  		obj.openDialogbox(true) -- AutoSizeColumns = true
  	else -- Shift-key pressed
  		obj.openDialog -- CallOpenControl = false (no open control of  DetailedResults)
  	end
  
  case "HTML_but"
  	~.showReport
  
  case "UseInputValues_CB"
  	bb := @.getCheckBox("UseInputValues_CB")
  	@.setSensitive("DefineInputValues_but", bb AND (~.Input.yDim > 0))
  	@.setSensitive("DefineInputVariables_but", bb)
  	~.UsingTables := bb
  
  case "APPLY","Apply"
  	if   ~.~ = rootfolder
  		return
  	end
  
  	i := str_to_num(@.getValue("Observations_Inp"))
  	if i>0
  		~.NumRuns := i
  	else
  		@.setCaption("Observations_Inp", to_str(~.NumRuns ))
  	end
  
  	-- The methods ~.inputChanged_AND ~.outputChanged_are plausibilityCtrls of Input and Output.
  	~.&resetWizard.check_InputValues_OutputValues
  	advancedSettings.&callback.execute("APPLY",advancedSettings,advancedSettings)
  
  	if ~.OnStartCallback /= void AND ~.OnStartCallback.InternalClassType /= "Method"
  		print "The custom atrribute \\"OnStartCallback\\" of \\"",~.name,"\\" must be a Method object."
  	end
  
  case "DistrSim_CB"
  	bb := @.getCheckBox("DistrSim_CB") -- distributed simulation tab
  	~.UsingRemote := bb
  	AdvancedSettings.setCheckBox("DistrSim_CB",bb)
  	self.~.useRemote(bb)
  	if bb AND (RemoteTable.yDim = 0)
  		CB_AddAddress(@,"localhost",-1,true)
  	end
  
  case "Open"
  	AdvancedSettings.&callback.execute("OPEN" ,AdvancedSettings,AdvancedSettings)
  	rootfolder.internal.translate(@)
  	self.~.checkDistrSim
  	@.setCheckBox("DistrSim_CB", ~.UsingRemote)
  	@.setCaption("Observations_Inp", to_str(~.NumRuns))
  	switch ~.ChartType
  	case "MinMaxDiagram"
  		@.setCheckBox("MinMax_Radio",true)
  	case "ConfidenceDiagram"
  		@.setCheckBox("Confidence_Radio",true)
  	end
  
  	bb := ~.UsingTables
  	@.setCheckBox("UseInputValues_CB",bb)
  	@.setSensitive("DefineInputValues_but", bb AND (~.Input.yDim > 0))
  	@.setSensitive("DefineInputVariables_but", bb)
  	--
  	j := ~.Kind_Output.numberOfOutputValues -- number of numerical output values
  	/*j:=0;
  	for i := 1 to ~.Kind_Output.yDim loop
  	if ~.Kind_Output[1,i] = "Tab" then
  	j := j + 1;
  	end
  	next*/
  		@.setSensitive("Variable_Chart_but", (j>1)) -- button for the selection of the output value
  		-- the chart shows a numerical output value
  		@.setSensitive("Chart_but",(j>0))
  		@.setSensitive("Intervals_txt",(j>0))
  		@.setSensitive("MinMax_Radio",(j>0))
  		@.setSensitive("Confidence_Radio",(j>0))
  
  		if ~.State /= "ready"
  			if ~.UsingRemote
  				obj := ~.JobsTable
  				n := 0
  				for i := 1 to obj.yDim
  					if obj[3,i] = "ready"
  						n := n + 1
  					end
  				next
  				@.setCaption("CurrObs", to_str(n))
  			else
  				@.setCaption("CurrExp", to_str(~.currExpNo))
  				@.setCaption("CurrObs", to_str(~.currRunNo))
  			end
  		end
  		-- end of case "Open"
  
  case "Contents_Menu"
  	HTMLHelp("")
  case "Index_Menu"
  	HTMLHelp("","")
  case "HelpObject_Menu"
  	HTMLHelp(~.HelpOnObjectENU)
  
  case "OpenLoc_Menu"
  	~.~.openDialog
  --	when "info_Menu" then ~.openBox;
  case "Chart_Menu"
  	if ~.Charts4AllObservations
  		~.Charts.comment := rootfolder.Localization.getText(443) --"Showing the results of all observations of each experiment"
  	else
  		~.Charts.comment := rootfolder.Localization.getText(154) --"Showing the results of the first observation of each experiments"
  	end
  	~.Charts.openDialog -- Charts and Sankey_diagrams which are showing in the Report
  case "Cancel"
  
  case "MinMax_Radio"
  	~.ChartType := "MinMaxDiagram"
  	self.~.ChangeChart
  case "Confidence_Radio"
  	~.ChartType := "ConfidenceDiagram"
  	self.~.ChangeChart
  case "Chart_but"
  	if ~.DetailedResults.yDim = 0  -- No experiment run was execute.
  		messageBox(rootfolder.Localization.getText(112),1,4) -- info
  		return
  	end
  	~.Report.close
  	~.prepChart(true)
  
  	if ~.Report.MeanValueTable.ydim = 0
  		-- No values for the chart selected.
  		messageBox(rootfolder.Localization.getText(113),1,4) -- info
  	end
  
  case "Variable_Chart_but"
  	-- output value selection for the chart object (without Output tables)
  	obj := ~.Report
  	tab := obj.DisplayedOutputValues
  	selectTab.create
  	~.Output.getListOfNumericOutput(selectTab)
  
  	/*selectTab.insertList(1, ~.ValueDescriptions.copy({1,1}..{1,*}))-- alias
  	for j := selectTab.dim downto 1
  	if (~.ValueDescriptions[2,j]="Input") OR ~.isOutTable(~.ValueDescriptions[0,j])
  	selectTab.remove(j)
  	end
  	next*/
  
  		if selectTab.dim > 1
  			if obj.active then obj.active := false end
  			-- ### del 111 ## Select an output value which will display on the y-axis.
  			-- Select one entry from the list below.
  			Indizes := promptlistN(selectTab, rootfolder.Localization.getText(116))
  			switch Indizes.dim
  			case 0  -- user does not select an item or Cancel =>> do not delete ~.Chart.DisplayedOutputValues (= tab)
  				str := ~.ValueDescriptions.getOrig(selectTab[1])
  				--obj.yLabel := selectTab[1]
  				if tab.yDim = 0
  					tab[1,1] := str
  				end
  			case 1
  				i := Indizes[1]
  				str := ~.ValueDescriptions.getOrig(selectTab[i])
  				--obj.yLabel := selectTab[i]
  				tab.delete --  ~.Chart.DisplayedOutputValues
  				tab[1,1] := str
  			else -- multiple selection
  				messageBox("Please select only a single entry from the list.",1,4) -- info
  			end
  
  		else -- there is only one output value
  			str := ~.ValueDescriptions.getOrig(selectTab[1])
  			--obj.yLabel := selectTab[1]
  			tab.delete --  ~.Chart.DisplayedOutputValues
  			tab[1,1] := str
  		end
  
  		~.Report.MeanValueTable.setDataType(1,"real")
  		if tab.yDim = 1
  			str := ~.ValueDescriptions.get(tab[1,1])
  			~.Report.MeanValueTable.setDataType(1,~.DetailedResults.getDataType(str))
  		end
  
  else
  	print "Unknown dialog callback argument '",Arg,"' of '",~.name,"'."
  end
-
 Name: startDateExpRun
 ID: 2
 DataType: datetime
 Value: 2017-1-1
-
 Name: DialogElements
 ID: 3
 DataType: table
 Value:
  Comment: "Translation of Index_Menu row 16"
  ShowComment: true
  CommonFormat: false
  ListFormat:
   ColumnIndex: true
   ColumnWidth: 20
   DataType: string
   MaxXDim: 2
   ShowDataType: true
   ColumnFormat:
   -
    Index: 2
    DataType: integer
   RowFormat:
   -
    Index: 0
    Hidden: false
  ColumnIndex: [string,3,~,"element","Index"]
  Columns:
  - [1,string,38,"Navigate_Menu","OpenLoc_Menu","Tools_Menu","MenuMultiLevel","RandomDesign_menu","Menu2level","FactorAnal","AdvancedSettings_menu","Varianzanalyse_menu","numObserv_menu","Store_menu","Restore_menu","Chart_Menu","Help_Menu","Contents_Menu","HelpObject_Menu","Start_but","Stop_but","Reset_but","Def_Tab","Evaluation_tab","OutputValues_but","UseInputValues_CB","DefineInputVariables_but","DefineInputValues_but","Observations_txt","DistrSim_CB","CurrExp_txt","CurrObs_txt","Results_but","DetailedResults_but","HTML_but","Chart_Type_txt","Variable_Chart_but","Chart_but","Intervals_txt","MinMax_Radio","Confidence_Radio"]
  - [2,integer,38,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41]
-
 Name: changeChart
 ID: 4
 DataType: method
 RandomSeed: 312
 Value: |+1
  -- called by: checkboxes
  if ~.OK_input AND ~.OK_output AND (~.DetailedResults.yDim > 0)
  	-- not performed before an experiment run (cf. 'Start' method)
  
  	for var i:=1 to ~.OutputValues.yDim  -- use the number of already finished experiments (non-distributed study)
  		~.CalcStatistics4Exp(i) -- after change the confidence level
  	next
  
  	~.prepChart(false)
  
  end
-
 Name: useRemote
 ID: 5
 DataType: method
 RandomSeed: 311
 Value: |+1
  param DistrSim:boolean
  
  var DLG:object := advancedSettings
  DLG.setCheckBox("DistrSim_CB", DistrSim)
  DLG.setSensitive("HeaderTxt", DistrSim)
  DLG.setSensitive("RemotesList", DistrSim)
  DLG.setSensitive("AddAddress", DistrSim)
  DLG.setSensitive("TestConnection_But", DistrSim)
  DLG.setSensitive("RemoveAddress", DistrSim)
  DLG.setSensitive("Recording", DistrSim)
  DLG.setSensitive("quitAfterTimeTxt", DistrSim)
  DLG.setSensitive("QuitAfterTime", DistrSim)
  DLG.setSensitive("LicTypeTxt", DistrSim)
  DLG.setSensitive("LowPrio_CB", DistrSim)
  DLG.setSensitive("LicType", DistrSim)
  DLG.setSensitive("SimulateWith3D_CB", DistrSim)
  
  
  DLG.setSensitive("modelDir_Inp", NOT DistrSim AND ~.save_model)
  DLG.setSensitive("modelDir_but", NOT DistrSim AND ~.save_model)
  DLG.setSensitive("file_inp",     NOT DistrSim AND ~.save_model)
  DLG.setSensitive("file_Txt",     NOT DistrSim AND ~.save_model)
-
 Name: checkDistrSim
 ID: 6
 DataType: method
 RandomSeed: 310
 Value: |+1
  -- called by: Open of both dialogs
  ~.DistrSimAvailable := true
  
  dialog.useRemote(~.UsingRemote) -- setSensitive
$Elements:
-
 Type: Menu
 Name: "Navigate_Menu"
 Caption: "Navigate"
 $Elements:
 -
  Type: Menu
  Name: "OpenLoc_Menu"
  Caption: "Open Location"
  CallbackArgument: "OpenLoc_Menu"
-
 Type: Menu
 Name: "Tools_Menu"
 Caption: "Tools"
 $Elements:
 -
  Type: Menu
  Name: "MenuMultiLevel"
  Caption: "Multi-level Experimental Design..."
  CallbackArgument: "MenuMultiLevel"
 -
  Type: Menu
  Name: "RandomDesign_menu"
  Caption: "Random Experimental Design..."
  CallbackArgument: "RandomDesign_menu"
 -
  Type: Menu
  Name: "sep"
  Caption: "-"
 -
  Type: Menu
  Name: "Menu2level"
  Caption: "Two-level Experimental Design..."
  CallbackArgument: "Menu2level"
 -
  Type: Menu
  Name: "FactorAnal"
  Caption: "Analysis of Factors"
  CallbackArgument: "FactorAnal"
 -
  Type: Menu
  Name: "sep2"
  Caption: "-"
 -
  Type: Menu
  Name: "AdvancedSettings_menu"
  Caption: "Advanced Settings..."
  CallbackArgument: "AdvancedSettings_menu"
 -
  Type: Menu
  Name: "sep3"
  Caption: "-"
 -
  Type: Menu
  Name: "Varianzanalyse_menu"
  Caption: "Analysis of Variance..."
  CallbackArgument: "ANOVA_menu"
 -
  Type: Menu
  Name: "numObserv_menu"
  Caption: "Number of Observations..."
  CallbackArgument: "numObserv_menu"
 -
  Type: Menu
  Name: "sep4"
  Caption: "-"
 -
  Type: Menu
  Name: "Store_menu"
  Caption: "Store Input Values"
  CallbackArgument: "Store_menu"
 -
  Type: Menu
  Name: "Restore_menu"
  Caption: "Restore Input Values"
  CallbackArgument: "Restore_menu"
 -
  Type: Menu
  Name: "sep5"
  Caption: "-"
 -
  Type: Menu
  Name: "Chart_Menu"
  Caption: "Charts"
  CallbackArgument: "Chart_Menu"
-
 Type: Menu
 Name: "Help_Menu"
 Caption: "Help"
 $Elements:
 -
  Type: Menu
  Name: "Contents_Menu"
  Caption: "Contents"
  CallbackArgument: "Contents_Menu"
 -
  Type: Menu
  Name: "HelpObject_Menu"
  Caption: "Help on Object"
  CallbackArgument: "HelpObject_Menu"
-
 Type: Button
 Name: "Start_but"
 Caption: "Start"
 Rect: [0,0,12,0]
 CallbackArgument: "Start_but"
 Enable: false
-
 Type: Button
 Name: "Stop_but"
 Caption: "Stop"
 Rect: [14,0,12,0]
 CallbackArgument: "Stop_but"
-
 Type: Button
 Name: "Reset_but"
 Caption: "Reset"
 Rect: [28,0,12,0]
 CallbackArgument: "Reset_but"
-
 Type: GroupBox
 Name: "Progress_Gr"
 Rect: [0,1,41,2]
 $Elements:
 -
  Type: StaticText
  Name: "CurrExp_txt"
  Caption: "Current experiment:"
 -
  Type: StaticText
  Name: "CurrExp"
  Caption: " "
  Rect: [18,0,0,0]
 -
  Type: StaticText
  Name: "CurrObs_txt"
  Caption: "Observation:"
  Rect: [22,0,0,0]
 -
  Type: StaticText
  Name: "CurrObs"
  Caption: " "
  Rect: [34,0,0,0]
-
 Type: TabControl
 Name: "Tabs"
 Rect: [0,4,43,9]
 $Elements:
 -
  Type: TabPage
  Name: "Def_Tab"
  Caption: "Definition"
  $Elements:
  -
   Type: Button
   Name: "OutputValues_but"
   Caption: "Define Output Values"
   Rect: [1,0,37,0]
   CallbackArgument: "OutputValues_but"
  -
   Type: CheckBox
   Name: "UseInputValues_CB"
   Caption: "Use input values"
   Rect: [1,1,0,0]
   CallbackArgument: "UseInputValues_CB"
  -
   Type: Button
   Name: "DefineInputVariables_but"
   Caption: "Define Input Values"
   Rect: [1,2,37,0]
   CallbackArgument: "DefineInputVariables_but"
   Enable: false
  -
   Type: Button
   Name: "DefineInputValues_but"
   Caption: "Define Experiments"
   Rect: [1,3,37,0]
   CallbackArgument: "DefineInputValues_but"
   Enable: false
  -
   Type: StaticText
   Name: "Observations_txt"
   Caption: "Observations per experiment:"
   Rect: [1,4,0,0]
  -
   Type: EditText
   Name: "Observations_Inp"
   Caption: "5"
   Rect: [31,4,7,0]
   DataType: 4
   Password: false
  -
   Type: CheckBox
   Name: "DistrSim_CB"
   Caption: "Use distributed simulation"
   Rect: [1,6,0,0]
   CallbackArgument: "DistrSim_CB"
 -
  Type: TabPage
  Name: "Evaluation_tab"
  Caption: "Evaluation"
  $Elements:
  -
   Type: Button
   Name: "Results_but"
   Caption: "Results"
   Rect: [1,0,37,0]
   CallbackArgument: "Results_but"
  -
   Type: Button
   Name: "DetailedResults_but"
   Caption: "Detailed Results"
   Rect: [1,1,37,0]
   CallbackArgument: "DetailedResults_but"
  -
   Type: Button
   Name: "HTML_but"
   Caption: "Report"
   Rect: [1,2,37,0]
   CallbackArgument: "HTML_but"
   Enable: false
  -
   Type: StaticText
   Name: "Chart_Type_txt"
   Caption: "Chart:"
   Rect: [1,4,0,0]
  -
   Type: Button
   Name: "Variable_Chart_but"
   Caption: "Variable"
   Rect: [13,4,12,0]
   CallbackArgument: "Variable_Chart_but"
   Enable: false
  -
   Type: Button
   Name: "Chart_but"
   Caption: "Show"
   Rect: [26,4,12,0]
   CallbackArgument: "Chart_but"
   Enable: false
  -
   Type: StaticText
   Name: "Intervals_txt"
   Caption: "Intervals:"
   Rect: [1,5,0,0]
   Enable: false
  -
   Type: RadioButton
   Name: "MinMax_Radio"
   Caption: "Min-Max"
   Rect: [14,5,0,0]
   CallbackArgument: "MinMax_Radio"
   Enable: false
   GroupID: 0
   IsSelected: true
  -
   Type: RadioButton
   Name: "Confidence_Radio"
   Caption: "Confidence"
   Rect: [14,6,0,0]
   CallbackArgument: "Confidence_Radio"
   Enable: false
   GroupID: 0
