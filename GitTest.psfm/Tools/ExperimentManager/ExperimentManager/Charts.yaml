InternalClassType: DataTable
Coordinate3D: [32.7,-0.05,0]
Name: Charts
Origin: 6fb33eda-8c16-46cb-b4e8-ad231b2e826f
PlausibilityCtrl: "self.PlausCharts"
UUID: 0585ad86-0953-4cd7-a38b-92f488e07b9d
$SequenceNumber: 80
$CustomAttributes:
-
 Name: PlausCharts
 ID: 1
 DataType: method
 RandomSeed: 199
 Value: |+1
  -- Plausibility method of the DataTable Charts
  var ChartTable:object := self.~ -- DataTable Charts
  var numCharts:integer := max(ChartTable.yDim, ChartTable.YdimIndex)
  
  for var j := numCharts downto 1
  	var chartObj:object := ChartTable[1,j]
  	if chartObj = void OR (chartObj.InternalClassType /= "Chart" AND chartObj.InternalClassType /= "SankeyDiagram")
  		ChartTable.cutRow(j)
  	end
  next
  
  ReplaceRootstr(ChartTable,1)
-
 Name: replace_dot
 ID: 2
 DataType: method
 RandomSeed: 198
 Value: |+1
  -- replace_dot
  param s:string->string
  
  var n,k:integer;var ReplaceStr,dotStr:string
  
  result := strOmit(s,1,5)
  dotStr := "."
  k := strLpos(dotStr,result)
  if k = 0 then return end
  n := strLen(result)
  ReplaceStr := "_"
  repeat
  	--result := omit(result,k,1);
  	result := to_str(strCopy(result,1,k-1),ReplaceStr,strCopy(result,k+1,n))
  	k := strLpos(".",result)
  until k = 0
-
 Name: deleteVoidEntries
 ID: 3
 DataType: method
 RandomSeed: 197
 Value: |+1
  -- called by: resetReport_(via_resetWizard)
  var obj:object := self.~
  for var j := obj.yDim downto 1 
  	if obj[1,j] = void 
  		obj.cutRow(j)
  	end
  next
$Data:
 Comment: "Showing the results of the first observation of each experiment"
 ShowComment: true
 ListFormat:
  ColumnIndex: true
  ColumnWidth: 20
  DataType: string
  RowIndex: true
  ShowDataType: true
  ColumnFormat:
  -
   Index: 0
   Hidden: false
   Width: 20
  -
   Index: 1
   DataType: object
   Width: 48
  RowFormat:
  -
   Index: 0
   Hidden: false
 ColumnIndex: [string,2,"Label of the Chart","Chart"]
 Columns:
